<?xml version="1.0" encoding="UTF-8"?>
<unload unload_date="2021-04-29 15:57:12">
<sys_script_fix action="INSERT_OR_UPDATE">
<before>false</before>
<description>Script to show all the inheritted roles and required "Assigned By" roles for a specific role.

Replace the "roleName" variable with role being added to check all inheritance.</description>
<name>Find all Inherited Roles</name>
<record_for_rollback>false</record_for_rollback>
<script><![CDATA[var roleArray = [];
var roleName = 'sn_ca.campaign_admin';
var gr = new GlideRecord('sys_user_role_contains');
gr.addQuery('role.name='+roleName);
gr.query();
while(gr.next())
{
var getParent = gr.contains;
roleArray.push(getParent);
for ( var i=0;i<roleArray.length;i++)
{
var gr1 = new GlideRecord('sys_user_role_contains');
gr1.addQuery('role',roleArray[i]);
gr1.query();
while(gr1.next())
{
var getParent1 = gr1.contains;
roleArray.push(getParent1);
roleArray = roleArray.filter( function( item, index, inputArray ) {
           return inputArray.indexOf(item) == index;
});
}
}
for ( var i=0;i<roleArray.length;i++){
var gr2 = new GlideRecord('sys_user_role_contains');
gr2.addQuery('role',roleArray[i]);
gr2.query();
while(gr2.next())
{
gs.info("Inherited Role: " + gr2.contains.getDisplayValue()+"\n Assignable by: " +gr2.contains.assignable_by.name);
}}
}]]></script>
<sys_class_name>sys_script_fix</sys_class_name>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-04-29 15:48:25</sys_created_on>
<sys_id>ea1c137d2f3320109f5f265df699b6a3</sys_id>
<sys_mod_count>9</sys_mod_count>
<sys_name>Find all Inherited Roles</sys_name>
<sys_package display_value="Global" source="global">global</sys_package>
<sys_policy/>
<sys_scope display_value="Global">global</sys_scope>
<sys_update_name>sys_script_fix_ea1c137d2f3320109f5f265df699b6a3</sys_update_name>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-04-29 15:57:07</sys_updated_on>
<unloadable>false</unloadable>
</sys_script_fix>
</unload>
